class Solution {
    private HashMap<Integer, Integer> hm = new HashMap<>();
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if (preorder.length == 0) return null;
        for (int i = 0; i < inorder.length; i++){
            hm.put(inorder[i], i);
        }
        return buildTree(preorder, inorder, 0, 0, inorder.length-1);
    }
    private TreeNode buildTree(int[] preorder, int[] inorder, int prePtr, int inStart, int inEnd){
        if (prePtr >= preorder.length || inStart > inEnd) return null;
        TreeNode root = new TreeNode(preorder[prePtr]);
        int index = hm.get(root.val);
        root.left = buildTree(preorder, inorder, prePtr+1, inStart, index-1);
        root.right = buildTree(preorder, inorder, prePtr+(index-inStart+1), index+1, inEnd);
        return root;
    }
}