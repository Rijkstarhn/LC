/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return buildTree(preorder, inorder, 0, 0, inorder.length - 1);
    }
    private TreeNode buildTree(int[] preorder, int[] inorder, int pre_pos, int in_low, int in_high){
        if (in_low > in_high) {
            return null;
        }
        TreeNode root = new TreeNode(preorder[pre_pos]);
        int in_root = 0;
        for (int i = 0; i < inorder.length; i++) {
            if (inorder[i] == preorder[pre_pos]) {
                in_root = i;
            }
        }
        root.left = buildTree(preorder, inorder, pre_pos + 1, in_low, in_root - 1);
        root.right = buildTree(preorder, inorder, pre_pos + 1 + in_root - in_low, in_root + 1, in_high);
        return root;
    }
}