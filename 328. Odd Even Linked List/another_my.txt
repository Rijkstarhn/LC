/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode oddEvenList(ListNode head) {
        if(head == null || head.next == null || head.next.next == null) return head;
        ListNode oddHead = head, evenHead = head.next;
        ListNode oddPtr = oddHead, evenPtr = evenHead;
        while(true) {
            if (oddPtr.next != null && oddPtr.next.next != null) {
                oddPtr.next = oddPtr.next.next;
                oddPtr = oddPtr.next;
            }
            if (evenPtr.next != null && evenPtr.next.next != null) {
                evenPtr.next = evenPtr.next.next;
                evenPtr = evenPtr.next;
            }
            if (oddPtr.next == null || evenPtr.next == null) {
                break;
            }
        }
        oddPtr.next = evenHead;
        evenPtr.next = null;
        return oddHead;
    }
}