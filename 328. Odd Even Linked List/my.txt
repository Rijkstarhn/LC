class Solution {
    public ListNode oddEvenList(ListNode head) {
        if(head == null || head.next == null || head.next.next == null) return head;
        ListNode oddHead = head, evenHead = head.next;
        ListNode oddPtr = oddHead, evenPtr = evenHead;
        ListNode ptr = evenPtr.next;
        int count = 3;
        while (ptr != null) {
            if (count%2 == 1) {
                oddPtr.next = ptr;
                oddPtr = ptr;
            }
            else {
                evenPtr.next = ptr;
                evenPtr = ptr;
            }
            ptr = ptr.next;
            count++;
        }
        oddPtr.next = evenHead;
        evenPtr.next = null;
        return oddHead;
    }
}