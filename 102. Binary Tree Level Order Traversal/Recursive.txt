class Solution {
    private List<List<Integer>> ans;
    public List<List<Integer>> levelOrder(TreeNode root) {
        ans = new ArrayList<>();
        if (root == null) return ans;
        Queue<TreeNode> levelAns = new LinkedList<>();
        levelAns.add(root);
        levelTra(levelAns);
        return ans;
    }
    private void levelTra(Queue<TreeNode> levelAns){
        int size = levelAns.size();
        if (size == 0) return;
        List<Integer> subAns = new LinkedList<>();
        for (int i = 0; i < size; i++){
            TreeNode node = levelAns.poll();
            subAns.add(node.val);
            if (node.left != null) levelAns.offer(node.left);
            if (node.right != null) levelAns.offer(node.right);
        }
        ans.add(subAns);
        levelTra(levelAns);
    }
}