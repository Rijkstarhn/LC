class Solution {
    public int maxEnvelopes(int[][] envelopes) {
        if (envelopes.length <= 1) return envelopes.length;
        Arrays.sort(envelopes, new envCompare());
        int ans = 0;
        int[] dp = new int[envelopes.length];
        dp[ans] = envelopes[0][1];
        for (int i = 1; i < envelopes.length; i++) {
            if (envelopes[i][1] > dp[ans]) dp[++ans] = envelopes[i][1];
            else insert(dp, envelopes[i][1], ans);
        }
        return ans+1;
    }
    
    class envCompare implements Comparator<int[]> {
        public int compare(int[] a1, int[] a2) {
            if (a1[0] - a2[0] != 0) return a1[0] - a2[0];
            else return a2[1] - a1[1];
        }
    }
    private void insert(int[] dp, int num, int ans) {
        int lo = 0, hi = ans;
        while (lo <= hi) {
            int mid = lo+(hi-lo)/2;
            if (dp[mid] > num) hi = mid-1;
            else if (dp[mid] < num) lo = mid+1;
            else return;
        }
        dp[lo] = num;
    }
}