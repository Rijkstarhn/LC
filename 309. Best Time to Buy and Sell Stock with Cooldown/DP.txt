class Solution {
    public int maxProfit(int[] prices) {
        int len = prices.length;
        if (len < 2) return 0;
        // variables
        int[] hold = new int[len];
        int[] unhold = new int[len];
        // initial state
        hold[0] = -prices[0];
        hold[1] = Math.max(-prices[0], -prices[1]);
        unhold[0] = 0;
        unhold[1] = Math.max(0, prices[1]-prices[0]);
        //state transition
        for (int i = 2; i < prices.length; i++) {
            unhold[i] = Math.max(unhold[i-1], hold[i-1] + prices[i]);
            hold[i] = Math.max(hold[i-1], unhold[i-2]-prices[i]);
        }
        return unhold[len-1];
    }
}