class Solution {
    public int maxProfit(int[] prices) {
        int len = prices.length;
        if (len < 2) return 0;
        if (len == 2) return Math.max(0, prices[1]-prices[0]); // Pay attention
        // variables
        int[] hold = new int[3];
        int[] unhold = new int[3];
        // initial state
        hold[0] = -prices[0];
        hold[1] = Math.max(-prices[0], -prices[1]);
        unhold[0] = 0;
        unhold[1] = Math.max(0, prices[1]-prices[0]);
        //state transition
        for (int i = 2; i < prices.length; i++) {
            unhold[2] = Math.max(unhold[1], hold[1] + prices[i]);
            hold[2] = Math.max(hold[1], unhold[0]-prices[i]);
            unhold[0] = unhold[1];
            unhold[1] = unhold[2];
            hold[0] = hold[1];
            hold[1] = hold[2];
        }
        return unhold[2];
    }
}