/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if (m == n) {
          return head;
        }
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        ListNode prevReverseStart = dummy; // the node before the changing zone
        for (int i = 0; i < m - 1; i++) {
            prevReverseStart = prevReverseStart.next;
        }
        ListNode prev = prevReverseStart.next;
        ListNode cur = prev.next;
        ListNode tmp = cur.next;
        for (int i = m; i < n; i++) {
            cur.next = prev;
            prev = cur;
            cur = tmp;
            if (tmp != null) {
                tmp = tmp.next;
            }
        }
        prevReverseStart.next.next = cur;
        prevReverseStart.next = prev;
        return dummy.next;
    }
}