class Solution {
    public int maxProfit(int[] prices) {
        if (prices.length < 2) return 0;
        int k = 2;
        int len = prices.length;
        int[][] dp = new int[k+1][len];
        for (int i = 1; i <= k; i++) {
            for (int j = 1; j < len; j++) {
                int tmpMax = Integer.MIN_VALUE;
                for (int subJ = 0; subJ < j; subJ++) {
                    tmpMax = Math.max(tmpMax, prices[j] + dp[i-1][subJ] - prices[subJ]);
                }
                dp[i][j] = Math.max(dp[i][j-1], tmpMax);
            }
        }
        return dp[k][len-1];
    }
}